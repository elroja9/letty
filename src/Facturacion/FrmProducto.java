/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Facturacion;

import ConexionBD.conexionBD;import Producto.Producto;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jonathan
 */
public class FrmProducto extends javax.swing.JFrame {

    Producto producto=new Producto();
    public TableRowSorter trsfiltro;
    DefaultTableModel temp;
    String filtro;
    int filas=0;
        double montoTotal=0;
    double IV=0;
    double subTotal=0,subTotalFijo=0;
    String cod;
    double subtotal=0;
    String impuesto;
    double impuestos;
    int canti,cantss;
    /**
     * Creates new form FrmProducto
     */
    public FrmProducto() {
        initComponents();
        mostrarProducto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        txtCodigo = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(70, 99, 138));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("C贸digo:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Descripci贸n:");

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C贸digo", "Descripci贸n", "Precio ", "Impuesto"
            }
        ));
        tblProductos.setFillsViewportHeight(true);
        tblProductos.setGridColor(new java.awt.Color(255, 255, 255));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PRODUCTOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(248, 248, 248))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        // TODO add your handling code here:
        txtCodigo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                if (!txtCodigo.getText().equals("")) {
                    filtrarCodigo();
                }
            }
        });
        trsfiltro = new TableRowSorter(temp);
        tblProductos.setRowSorter(trsfiltro);
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        txtDescripcion.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                if (!txtDescripcion.getText().equals("")) {
                    filtrarDescripcion();
                }
            }
        });
        trsfiltro = new TableRowSorter(temp);
        tblProductos.setRowSorter(trsfiltro);
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        // TODO add your handling code here:
        tblProductos.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseReleased(MouseEvent e){
                int fila = tblProductos.getSelectedRow();

                if(e.getClickCount()==2){
                    DefaultTableModel modeloDeMiTabla=(DefaultTableModel)FrmFactura.tblProductos.getModel();
                    String cant=JOptionPane.showInputDialog("Digite la cantidad");
                    cod=tblProductos.getValueAt(fila,0).toString();
                    String descripcion=tblProductos.getValueAt(fila, 1).toString();
                    String precio=tblProductos.getValueAt(fila,2).toString();
                    impuesto=tblProductos.getValueAt(fila,3).toString();
                    String cants=tblProductos.getValueAt(fila, 4).toString();
                    cantss=Integer.parseInt(cants);
                    
                    impuestos=Double.parseDouble(FrmFactura.txtImpuesto.getText());
                    double venta=Double.parseDouble(precio);
                    canti=Integer.parseInt(cant);
                    if(canti>cantss){JOptionPane.showMessageDialog(rootPane,"No existe esa cantidad disponible");}
                    else{
                    subtotal=venta*canti;
                    modeloDeMiTabla.addRow(new Object[filas]);
                    FrmFactura.tblProductos.setValueAt(cant, fila, 0);
                    FrmFactura.tblProductos.setValueAt(cod,fila ,1);
                    FrmFactura.tblProductos.setValueAt(descripcion,fila ,2);
                    FrmFactura.tblProductos.setValueAt(venta,fila ,3);
                    FrmFactura.tblProductos.setValueAt(subtotal,fila ,4);
                    calcularSubtotal();
                    //FrmFactura frmFactura=new FrmFactura();
                    
                    FrmFactura.tblProductos.setModel(modeloDeMiTabla);
                    //frmFactura.calcularSubtotal();
                    
                    JOptionPane.showMessageDialog(rootPane," el producto fue agregado correctamente");
                    cerrar();}
                }
                
            }
        }
        );
        
        filas++;
          

    }//GEN-LAST:event_tblProductosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProducto().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables


    public void mostrarProducto(){
    
        Connection conn;
        temp=new DefaultTableModel();
        try{
        
            conn=conexionBD.getConnection();
            Statement stm=conn.createStatement();
            ResultSet rs=stm.executeQuery("select prod.cod_producto as C贸digo,prod.descripcion as Descripci贸n,"
                    + "prod.precio_venta as Precio,prod.impuesto as Impuesto,i.stock as Stock from tb_producto as prod join tb_inventario as i on i.cod_producto=prod.cod_producto");
            ResultSetMetaData md=rs.getMetaData();
            int columnas= md.getColumnCount();
            for (int i = 1; i <= columnas; i++) {
            temp.addColumn(md.getColumnLabel(i));}
            while(rs.next()){
            Object[] fila = new Object[columnas];
            for (int i = 0; i < columnas; i++) {fila[i]=rs.getObject(i+1);}
            temp.addRow(fila);
            }tblProductos.setModel(temp);
            conn.close();
            }catch(SQLException sqlex){
            setTitle("Problema CargarDatos" +sqlex.getMessage());}
        }
    
        
    public void filtrarCodigo(){
       
           try{
           
               filtro=txtCodigo.getText().toUpperCase();
               int columna=0;
               trsfiltro.setRowFilter(RowFilter.regexFilter(txtCodigo.getText().toUpperCase(), columna));
           }
           catch(Exception ex){System.err.println(ex.getMessage());}
       }
       
       public void filtrarDescripcion(){
       
           try{
           
               filtro=txtDescripcion.getText();
               int columna=1;
               trsfiltro.setRowFilter(RowFilter.regexFilter(txtDescripcion.getText(), columna));
           }
           catch (Exception ex){System.err.println(ex.getMessage());}
       }
       
       
    public void calcularSubtotal(){
            int fila = 0;
            IV = 0.0;
            montoTotal = 0.0;
            //fila = ListaProductoV.getRowCount();
            /*fila = FrmFactura.tblProductos.getRowCount();
            JOptionPane.showMessageDialog(rootPane, fila);
            //fila = ListaProductoV.getRowCount();
            for (int f = 0; f < fila; f++) {
                String codProductoFactura=FrmFactura.tblProductos.getValueAt(f, 1).toString();
                
                if(codProductoFactura==cod){
                    
                    String descontar=FrmFactura.tblProductos.getValueAt(f, 4).toString();
                    double descontar1=Double.parseDouble(descontar);
                    subTotal = Double.parseDouble(FrmFactura.txtSubtotal.getText());
                    double subTotalFijo1=subTotal-descontar1;
                    FrmFactura.txtSubtotal.setText(String.valueOf(subTotalFijo1));                
                }
                else{f++;}
                
                
            }*/
                subTotal = Double.parseDouble(FrmFactura.txtSubtotal.getText());
                subTotalFijo=subTotal+subtotal;
                FrmFactura.txtSubtotal.setText(String.valueOf(subTotalFijo));
                FrmFactura.txtSubtotal.setForeground(Color.black);
                double impuesto1=Double.parseDouble(impuesto);
                impuesto1=impuesto1*canti;
                double impuestosF=impuesto1+impuestos;
                FrmFactura.txtImpuesto.setText(String.valueOf(impuestosF));
                FrmFactura.txtImpuesto.setForeground(Color.BLACK);
                double total=subTotalFijo+impuestosF;    
                FrmFactura.txtNeto.setText(String.valueOf(total));
                FrmFactura.txtDescuento.setText("0");
        }
    
    public void cerrar(){this.dispose();}
}


